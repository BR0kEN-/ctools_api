<?php
/**
 * @file
 * Chaos Tools Suite API.
 *
 * @author Sergii Bondarenko <sb@firstvector.org>
 */

// Easiest way to obtain path to location directory.
define('CTOOLS_API_MODULE_PATH', trim(str_replace(DRUPAL_ROOT, '/', __DIR__), '/'));
define('CTOOLS_API_MODULE_TITLE', 'CTools API');

// Include auxiliary functionality.
require_once 'includes/ctools_api.common.inc';
// Include API for "styles" plugins provided by Panels.
require_once 'includes/plugin_types/panels/styles.inc';
// Include API for "access" plugins provided by CTools.
require_once 'includes/plugin_types/ctools/access.inc';
// Include API for "content_types" plugins provided by CTools.
require_once 'includes/plugin_types/ctools/content_types.inc';

ctools_api_register_autoloader_path(CTOOLS_API_MODULE_PATH . '/includes');

spl_autoload_register(function ($namespace) {
  $namespace = str_replace('\\', '/', $namespace);

  // @codingStandardsIgnoreStart
  foreach (ctools_api_register_autoloader_path() as $path) {
    $file = "$path/$namespace.inc";

    if (file_exists($file)) {
      require_once $file;
      break;
    }
  }
  // @codingStandardsIgnoreEnd
});

/**
 * Implements hook_menu().
 */
function ctools_api_menu() {
  $routes = [];

  $routes['ctools_api/get_fid_by_uri'] = [
    'type' => MENU_CALLBACK,
    'file' => 'includes/ctools_api.pages.inc',
    'page callback' => '_ctools_api_get_fid_by_uri',
    'access arguments' => ['access content'],
  ];

  return $routes;
}

/**
 * Implements hook_menu_alter().
 */
function ctools_api_menu_alter(array &$items) {
  // The ctools_access_ajax_add() - is a callback for this route. It expects
  // two arguments: $fragment and $name. The last one - should be the name of
  // access plugin. All work fine until we didn't started to operate with
  // namespaces with a "\" symbol as separator. Drupal split a path by this
  // symbol and we get wrong plugin name and additional arguments.
  //
  // @example
  // ctools_api:CTools\Plugins\Access\HTTPStatusCode -> ctools_api:CTools
  //
  // @see ctools_context_menu()
  // @see ctools_access_ajax_add()
  $items['ctools/context/ajax/access/add']['page callback'] = 'ctools_api_access_ajax_add';
}

/**
 * Implements hook_theme().
 */
function ctools_api_theme(array $existing, $type, $theme, $path) {
  $hooks = [];

  $hooks['ctools'] = [
    'render element' => 'elements',
  ];

  foreach (['content_types', 'styles'] as $plugin_type) {
    foreach (ctools_api_get_plugins($plugin_type) as $plugin) {
      foreach (drupal_system_listing('/\.tpl\.php$/', $plugin['plugin module path'], 'name', 0) as $template => $file) {
        // Chop off the remaining extensions if there are any. $template
        // already has the rightmost extension removed, but there might
        // still be more, such as with .tpl.php, which still has .tpl in
        // $template at this point.
        $dot = strpos($template, '.');

        if (FALSE !== $dot) {
          $template = substr($template, 0, $dot);
        }

        $hooks[strtr($template, '-', '_')] = [
          'path' => dirname($file->uri),
          'template' => $template,
        ];
      }
    }
  }

  return $hooks;
}

/**
 * Implements hook_form_alter().
 */
function ctools_api_form_alter(array &$form, array &$form_state, $form_id) {
  switch ($form_id) {
    case 'ctools_api_ctools_api_content_type_edit_form':
      // Wrap form in a container for replacing the markup after AJAX calls.
      $form['#prefix'] = '<div id="' . $form_id . '">';
      $form['#suffix'] = '</div>';

      // Add class to buttons to be able to distinguish them.
      foreach (['return', 'cancel'] as $button) {
        $form['buttons'][$button]['#attributes']['class'][] = $button;
      }
      break;
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ctools_api_ctools_plugin_directory($owner, $plugin_type) {
  return "api/$owner/$plugin_type";
}

/**
 * Implements hook_ctools_api_plugins_directory().
 */
function ctools_api_ctools_api_plugins_directory() {
  return 'plugins';
}

/**
 * Menu callback.
 *
 * @see ctools_api_menu_alter()
 */
function ctools_api_access_ajax_add() {
  $arguments = func_get_args();
  ctools_access_ajax_add(array_shift($arguments), implode('\\', $arguments));
}
